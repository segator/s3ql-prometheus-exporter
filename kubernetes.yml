apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: s3ql-prometheus-exporter
  name: s3ql-prometheus-exporter
  namespace: monitoring
spec:
  replicas: 1  
  selector:
    matchLabels:
      app: s3ql-prometheus-exporter
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: s3ql-prometheus-exporter
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: storage
                operator: In
                values:
                - s3ql
      containers:
      - image: segator/s3qlprometheusexporter
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 6530
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 2
          successThreshold: 1
          timeoutSeconds: 2
        name: s3ql-prometheus-exporter
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 6530
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 2
          successThreshold: 2
          timeoutSeconds: 2
        args:
        - --path
        - /mnt/s3ql
        - --port
        - 6530
        volumeMounts:
        - mountPath: /mnt/s3ql
          name: data
          readOnly: true
      restartPolicy: Always
      volumes:
      - hostPath:
          path: /mnt/s3ql
          type: Directory
        name: data      
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: s3ql-prometheus-series
  annotations:   
    prometheus.io/path: /
    prometheus.io/port: "6530"
    prometheus.io/scheme: http
    prometheus.io/scrape: "true"
  name: s3ql-prometheus-exporter
  namespace: monitoring
spec:
  ports:
  - name: web
    port: 80
    protocol: TCP
    targetPort: 6530
  selector:
    app: s3ql-prometheus-exporter
  type: ClusterIP
